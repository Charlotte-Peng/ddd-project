server:
  port: 0
  servlet:
    context-path:
  forward-headers-strategy: none
  undertow:
    accesslog:
      enabled: false
      dir: logs
    threads:
      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
      # 不要设置过大，如果过大，启动项目会报错：打开文件数过多
      io: 16
      # 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
      # 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
      worker: 256
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
    buffer-size: 1024
    # 是否分配的直接内存(NIO直接分配的堆外内存)
    direct-buffers: true
spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  application:
    name: metaverse-websocket
  redis:
    password: $ZyF_8861-78Z
    cluster:
      nodes: 10.8.8.5:6379,10.8.8.5:6380,10.8.8.5:6381
knife4j:
  # 开启增强配置
  enable: true
  # 开启生产环境屏蔽
  production: false
swagger3:
  enable: true
  title: WebSocket
  description: Metaverse WebSocket api document
  authHeaderKey: X-Meta_verse-token
logging:
  config: classpath:log4j2-dev.xml
  level:
    cn.jay.repository: trace
task:
  pool:
    corePoolSize: 10
    maxPoolSize: 20
    keepAliveSeconds: 300
    queueCapacity: 50
project:
  # 项目名称
  name: Metaverse
  # 默认租户id
  tenantId: 19980105
  debug: true